{"version":3,"sources":["components/UnexpectedDetails.js","components/UnExpiredSvgIcon.js","components/Unexpired.js","components/WhouseDetails.js","components/CanvasGraphicDetails.js","components/Logo.js","components/CompanyDashbord.js","components/Main.js","components/Login.js","components/AlertsList.js","components/Alerts.js","App.js","index.js"],"names":["UnexpectedDetails","props","details","Upper","splice","i","length","count","slice","startsWith","style","position","marginLeft","map","value","className","display","textAlign","fontSize","key","fontWeight","color","UnExpiredSvgIcon","height","id","enableBackground","viewBox","width","requiredExtensions","cx","cy","fill","r","d","Unexpired","styled","span","WhouseDetails","activeWarehouse","setActiveWH","URL","stateArr","counter","state","product","quantity","expired","retrievedData","this","fetch","mode","headers","then","res","json","data","expierd","newState","setState","catch","e","error","console","getWarehouseStock","stateData","property","push","WH","filter","wh","active","name","stateToArr","Date","toLocaleString","Component","CanvasGraphicDetails","currentWH","getMonthesData","monthInvetoryData","lineGraph","item","monthGraph","month","monthGraphNames","toString","substr","trim","canvasHeight","Math","max","normalizeNum","numToStr","digitsCounter","abs","setUnits","proportionsMeasure","monthesLength","scaleCanvasWidth","canvasWidth","scaleCanvasHeight","graphViewFlag","canvas","mainCanvasRef","current","lineLength","monthX","middleX","middleY","ctx","getContext","clearRect","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","forEach","lineTo","save","font","translate","rotate","PI","fillText","restore","stroke","secondaryCtx","secondaryCanvasRef","currentMonth","drawCompData","currentPoint","currentQuantity","ltrCtx","ltrMainCanvasRef","ltrSecondaryCtx","ltrSecondaryCanvasRef","drawLtrGraph","drawCompBase","toggleErr","React","useState","units","err","handleErr","message","includes","httpError","Error","log","setTimeout","setWidth","setHeight","createRef","setLtrView","alignGraphFlag","setGraphAlignment","useEffect","secondaryCanvasStyle","margin","left","quantitySpan","paddingRight","year","getFullYear","fontFamily","ref","backgroundColor","transform","zIndex","bottom","right","top","Button","onClick","disabled","outline","Logo","x","y","rx","ry","strokeWidth","opacity","UncontrolledTooltip","placement","target","MainBlueNav","div","Boldlink","CompanyDashboard","warehouses","passActiveWarehouse","currentRoute","passVirtulRoute","isOpen","setIsOpen","exsistWarehouses","warehousesUseCases","useCase","activateWarehouse","warehouse","wlength","activeWH","find","wHouse","activeWarehouseIndex","findIndex","Navbar","light","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","padding","DropdownMenu","DropdownItem","divider","NavbarText","Main","initialWarhouses","initialWarehouses","setActive","showGraph","toggleGraph","toggleView","textTransform","Login","userName","setUserName","password","setPassword","handleChange","inputName","validateForm","Row","xs","Form","onSubmit","preventDefault","sessionStorage","setItem","passValidityCheck","passCurrentUser","FormGroup","Label","Input","onChange","invalid","valid","FormFeedback","tooltip","FormText","AlertsList","toggleDetails","setcounter","collapseInt","setInterval","clearInterval","dynamicText","ToastHeader","icon","currentUser","Alert","Progress","striped","UncontrolledCollapse","toggler","removeItem","cursor","Alerts","intialWarehouses","validForm","setValidForm","setcurrentUser","getItem","App","mimicRoute","setMimicRoute","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92730b64.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function UnexpectedDetails({ ...props }) {\n    const { details, Upper } = props;\n    details.splice(0, 2); // don't need details about retrieved data (know its duplicate)\n\n    // display number only for product property\n    for (let i = 2; i < details.length; i++) {\n        let count = 1;\n        if (typeof details[i] === 'string' && i % 2 === 0) {\n            details[i] = details[i].slice(0, -1);\n        }\n        if (typeof details[i] === 'string' && details[i].startsWith('product')) {\n            count++;\n            details[i] += ` ${count}`;\n        }\n    }\n    return (\n        <div>\n            <details style={{ position: 'absolute', marginLeft: '50px' }}>\n                <summary>Warehouse available info</summary>\n                {details.map((value, i) => {\n                    return i % 2 === 0 &&  //  show only keys\n                        (<small className=\"text-info\" style={{ display: 'block', textAlign: 'center', fontSize: '100%' }} key={i}>{value}</small>)\n                })}\n            </details>\n            {details.map((value, i) => {\n                return (<div key={i}> {i % 2 === 0 ?\n                    <Upper style={{ fontWeight: 'bold', color: 'teal' }}>{value}:</Upper>\n                    :\n                    <p className=\"text-primary\">{value}</p>\n                }\n                </div>\n                )\n            })}\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function UnExpiredSvgIcon() {\n    return (\n         <svg style={{height: '100px'}} id=\"Layer_1\" enableBackground=\"new 0 0 256 256\" height=\"512\" viewBox=\"0 0 256 256\" width=\"512\"><switch><foreignObject height=\"1\" requiredExtensions=\"http://ns.adobe.com/AdobeIllustrator/10.0/\" width=\"1\"/><g><circle cx=\"128\" cy=\"128\" fill=\"#382b73\" r=\"120\"/><circle cx=\"128\" cy=\"128\" fill=\"#473080\" r=\"102.5\"/><path d=\"m62.189 125.002h131.621c1.946 0 3.523-1.577 3.523-3.523s-1.577-3.523-3.523-3.523h-47.096c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056h-32.344c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h-15.156c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056h-32.344c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h-4.68c-1.946 0-3.523 1.577-3.523 3.523s1.577 3.523 3.522 3.523z\" fill=\"#382b73\"/><path d=\"m193.811 172.246h-47.096c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056h-32.345c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h-15.156c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056h-32.344c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h-4.68c-1.946 0-3.523 1.577-3.523 3.523 0 1.946 1.577 3.523 3.523 3.523h131.621c1.946 0 3.523-1.577 3.523-3.523-.001-1.946-1.578-3.523-3.523-3.523z\" fill=\"#382b73\"/><path d=\"m171.715 161.624 9.037-8.022c.814-.723.814-1.994 0-2.717l-9.037-8.022c-1.172-1.04-3.022-.208-3.022 1.358v3.23h-6.621c-1.392 0-2.52 1.128-2.52 2.52v4.545c0 1.392 1.128 2.52 2.52 2.52h6.621v3.23c0 1.566 1.851 2.398 3.022 1.358z\" fill=\"#382b73\"/><path d=\"m99.214 72.5h-32.344c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056z\" fill=\"#f7cb15\"/><path d=\"m99.214 107.009h-32.344c-1.688 0-3.056-1.368-3.056-3.056v3.948c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-3.948c0 1.688-1.368 3.056-3.056 3.056z\" fill=\"#e7ad27\"/><path d=\"m84.347 90.158h-2.61c-1.688 0-3.056-1.368-3.056-3.056v-14.602h8.723v14.602c0 1.688-1.369 3.056-3.057 3.056z\" fill=\"#e7ad27\"/><path d=\"m97.898 103.656h-7.322c-.563 0-1.019-.456-1.019-1.019v-4.329c0-.563.456-1.019 1.019-1.019h7.322c.563 0 1.019.456 1.019 1.019v4.329c0 .563-.456 1.019-1.019 1.019z\" fill=\"#fede3a\"/><path d=\"m74.691 103.656h-7.258c-.58 0-1.05-.47-1.05-1.051 0-.58.47-1.05 1.05-1.05h7.258c.58 0 1.051.47 1.051 1.05-.001.581-.471 1.051-1.051 1.051z\" fill=\"#fede3a\"/><path d=\"m74.691 99.899h-7.258c-.58 0-1.05-.47-1.05-1.05 0-.58.47-1.051 1.05-1.051h7.258c.58 0 1.051.47 1.051 1.051-.001.58-.471 1.05-1.051 1.05z\" fill=\"#fede3a\"/><path d=\"m99.214 126.789h-32.344c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056z\" fill=\"#ef5a9d\"/><path d=\"m99.214 161.298h-32.344c-1.688 0-3.056-1.368-3.056-3.056v3.948c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-3.948c0 1.688-1.368 3.056-3.056 3.056z\" fill=\"#e43d91\"/><path d=\"m84.347 144.447h-2.61c-1.688 0-3.056-1.368-3.056-3.056v-14.602h8.723v14.602c0 1.688-1.369 3.056-3.057 3.056z\" fill=\"#e43d91\"/><path d=\"m97.898 157.945h-7.322c-.563 0-1.019-.456-1.019-1.019v-4.329c0-.563.456-1.019 1.019-1.019h7.322c.563 0 1.019.456 1.019 1.019v4.329c0 .563-.456 1.019-1.019 1.019z\" fill=\"#e43d91\"/><path d=\"m74.691 157.945h-7.258c-.58 0-1.05-.47-1.05-1.051 0-.58.47-1.051 1.05-1.051h7.258c.58 0 1.051.47 1.051 1.051-.001.581-.471 1.051-1.051 1.051z\" fill=\"#e43d91\"/><path d=\"m74.691 154.188h-7.258c-.58 0-1.05-.47-1.05-1.05 0-.58.47-1.05 1.05-1.05h7.258c.58 0 1.051.47 1.051 1.05-.001.58-.471 1.05-1.051 1.05z\" fill=\"#e43d91\"/><path d=\"m146.714 72.5h-32.344c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056z\" fill=\"#f7cb15\"/><path d=\"m146.714 107.009h-32.344c-1.688 0-3.056-1.368-3.056-3.056v3.948c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-3.948c0 1.688-1.368 3.056-3.056 3.056z\" fill=\"#e7ad27\"/><path d=\"m131.847 90.158h-2.61c-1.688 0-3.056-1.368-3.056-3.056v-14.602h8.723v14.602c0 1.688-1.369 3.056-3.057 3.056z\" fill=\"#e7ad27\"/><path d=\"m145.398 103.656h-7.322c-.563 0-1.019-.456-1.019-1.019v-4.329c0-.563.456-1.019 1.019-1.019h7.322c.563 0 1.019.456 1.019 1.019v4.329c0 .563-.456 1.019-1.019 1.019z\" fill=\"#fede3a\"/><path d=\"m122.191 103.656h-7.258c-.58 0-1.05-.47-1.05-1.051 0-.58.47-1.05 1.05-1.05h7.258c.58 0 1.051.47 1.051 1.05-.001.581-.471 1.051-1.051 1.051z\" fill=\"#fede3a\"/><path d=\"m122.191 99.899h-7.258c-.58 0-1.05-.47-1.05-1.05 0-.58.47-1.051 1.05-1.051h7.258c.58 0 1.051.47 1.051 1.051-.001.58-.471 1.05-1.051 1.05z\" fill=\"#fede3a\"/><path d=\"m146.714 126.789h-32.344c-1.688 0-3.056 1.368-3.056 3.056v32.344c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-32.344c0-1.688-1.368-3.056-3.056-3.056z\" fill=\"#ef5a9d\"/><path d=\"m146.714 161.298h-32.344c-1.688 0-3.056-1.368-3.056-3.056v3.948c0 1.688 1.368 3.056 3.056 3.056h32.344c1.688 0 3.056-1.368 3.056-3.056v-3.948c0 1.688-1.368 3.056-3.056 3.056z\" fill=\"#e43d91\"/><path d=\"m131.847 144.447h-2.61c-1.688 0-3.056-1.368-3.056-3.056v-14.602h8.723v14.602c0 1.688-1.369 3.056-3.057 3.056z\" fill=\"#e43d91\"/><path d=\"m145.398 157.945h-7.322c-.563 0-1.019-.456-1.019-1.019v-4.329c0-.563.456-1.019 1.019-1.019h7.322c.563 0 1.019.456 1.019 1.019v4.329c0 .563-.456 1.019-1.019 1.019z\" fill=\"#e43d91\"/><path d=\"m122.191 157.945h-7.258c-.58 0-1.05-.47-1.05-1.051 0-.58.47-1.051 1.05-1.051h7.258c.58 0 1.051.47 1.051 1.051-.001.581-.471 1.051-1.051 1.051z\" fill=\"#e43d91\"/><path d=\"m122.191 154.188h-7.258c-.58 0-1.05-.47-1.05-1.05 0-.58.47-1.05 1.05-1.05h7.258c.58 0 1.051.47 1.051 1.05-.001.58-.471 1.05-1.051 1.05z\" fill=\"#e43d91\"/><path d=\"m193.811 118.002h-131.622c-1.946 0-3.523-1.577-3.523-3.523 0-1.946 1.577-3.523 3.523-3.523h131.621c1.946 0 3.523 1.577 3.523 3.523 0 1.946-1.577 3.523-3.522 3.523z\" fill=\"#fede3a\"/><path d=\"m193.811 172.291h-131.622c-1.946 0-3.523-1.577-3.523-3.523 0-1.946 1.577-3.523 3.523-3.523h131.621c1.946 0 3.523 1.577 3.523 3.523 0 1.946-1.577 3.523-3.522 3.523z\" fill=\"#fede3a\"/><path d=\"m171.715 154.624 9.037-8.022c.814-.723.814-1.994 0-2.717l-9.037-8.022c-1.172-1.04-3.022-.208-3.022 1.358v3.23h-6.621c-1.392 0-2.52 1.128-2.52 2.52v4.545c0 1.392 1.128 2.52 2.52 2.52h6.621v3.23c0 1.566 1.85 2.398 3.022 1.358z\" fill=\"#fede3a\"/><path d=\"m180.752 143.885-.755-.67-8.283 7.353c-1.172 1.04-3.022.208-3.022-1.358v-3.23h-6.621c-1.392 0-2.52-1.128-2.52-2.52v4.056c0 1.392 1.128 2.52 2.52 2.52h6.621v3.23c0 1.567 1.851 2.399 3.022 1.358l9.037-8.022c.815-.723.815-1.995.001-2.717z\" fill=\"#e7ad27\"/><circle cx=\"130.542\" cy=\"145.243\" fill=\"#fff\" r=\"14.625\"/><path d=\"m137.29 151.526-1.56-1.56c.719-1.027 1.142-2.278 1.142-3.627 0-1.498-.521-2.874-1.39-3.958l1.809-1.809c.398.398 1.043.398 1.441 0s.398-1.043 0-1.441c-.275-.275-.669-.36-1.017-.254.106-.348.021-.742-.254-1.017-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441l-1.85 1.85c-1.027-.719-2.278-1.142-3.627-1.142s-2.6.423-3.627 1.142l-1.85-1.85c.398-.398.398-1.043 0-1.441s-1.043-.398-1.441 0c-.275.275-.36.669-.254 1.017-.348-.106-.742-.021-1.017.254-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0l1.809 1.809c-.87 1.084-1.39 2.46-1.39 3.958 0 1.349.422 2.6 1.142 3.627l-1.56 1.56c-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441c.275.275.669.36 1.017.254-.105.348-.021.742.254 1.017.398.398 1.043.398 1.441 0s.398-1.043 0-1.441l1.519-1.519c.281.226.582.428.9.604v2.464c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-1.697c.166.013.333.02.502.02s.336-.007.502-.02v1.697c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-2.464c.318-.176.619-.378.9-.604l1.519 1.519c-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0c.275-.275.36-.669.254-1.017.348.106.742.021 1.017-.254.398-.398.398-1.043 0-1.441-.402-.398-1.047-.398-1.445 0zm-5.203-8.294c.017-.01.034-.019.051-.028.004-.002.008-.004.012-.006.015-.008.03-.016.046-.023.003-.001.006-.003.009-.005.037-.018.075-.035.114-.051.003-.001.006-.002.009-.004.016-.007.032-.013.048-.019.005-.002.009-.003.013-.005.018-.007.036-.013.054-.019.001 0 .002-.001.003-.001.02-.007.04-.013.061-.02.003-.001.005-.002.008-.002.017-.005.034-.01.052-.015.004-.001.008-.002.013-.003.019-.005.038-.01.057-.014.001 0 .002 0 .002-.001.021-.005.042-.009.063-.014.003-.001.007-.001.01-.002l.051-.009c.006-.001.011-.002.017-.003.017-.003.034-.005.05-.008.004-.001.008-.001.011-.002.042-.005.084-.01.127-.013.005 0 .01-.001.015-.001.018-.001.035-.002.052-.003.004 0 .009 0 .013-.001.022-.001.043-.001.065-.001.029 0 .059.001.088.002h.009c.028.001.055.003.082.005.005 0 .009.001.014.001.027.003.054.005.08.009.004.001.007.001.011.002.056.008.112.018.166.03.003.001.005.001.008.002.026.006.053.012.079.019.004.001.008.002.011.003.026.007.051.015.076.022.003.001.007.002.01.003.025.008.05.017.075.026.001.001.003.001.004.002.025.009.049.019.074.029.003.001.007.003.01.004.024.01.048.021.072.031.004.002.007.003.011.005.023.011.047.022.07.034.003.002.006.003.01.005.023.012.046.025.069.038.001.001.002.001.003.002.023.013.046.027.069.041.003.002.005.003.008.005.021.014.042.028.063.042l.012.009c.021.014.041.029.061.044.003.002.007.005.01.008.021.016.041.032.062.049.46.38.754.954.754 1.598 0 1.143-.927 2.069-2.069 2.069-.09 0-.179-.006-.267-.017-.027-.004-.055-.008-.082-.012-.002 0-.005-.001-.007-.001-.026-.005-.052-.01-.078-.015-.003-.001-.007-.001-.01-.002-.026-.006-.052-.012-.078-.019h-.001c-.026-.007-.052-.014-.078-.022-.002-.001-.004-.001-.006-.002-.025-.008-.05-.016-.075-.025-.003-.001-.006-.002-.009-.003-.025-.009-.05-.018-.075-.028-.001 0-.001-.001-.002-.001-.025-.01-.051-.021-.076-.032 0 0-.001 0-.001-.001-.025-.011-.049-.023-.073-.035-.002-.001-.004-.002-.006-.003-.024-.012-.047-.024-.07-.037-.002-.001-.003-.002-.005-.003-.047-.026-.092-.053-.136-.082-.003-.002-.005-.003-.008-.005-.022-.014-.043-.029-.064-.044-.001-.001-.003-.002-.004-.003-.043-.031-.085-.064-.126-.098-.002-.002-.004-.004-.007-.006-.019-.016-.038-.033-.057-.05-.002-.002-.005-.005-.007-.007-.038-.035-.075-.072-.11-.11-.002-.002-.004-.004-.006-.007-.017-.019-.034-.038-.051-.058-.002-.002-.003-.004-.005-.006-.011-.014-.022-.027-.033-.041-.009-.011-.018-.023-.027-.034s-.017-.023-.026-.034c-.008-.012-.017-.023-.025-.035s-.016-.023-.024-.035-.016-.024-.024-.036-.015-.024-.023-.036-.015-.025-.022-.037-.014-.024-.02-.036c-.007-.013-.014-.026-.021-.039s-.013-.025-.02-.038c-.006-.012-.012-.025-.018-.037-.007-.013-.013-.027-.019-.04-.006-.012-.011-.025-.016-.038-.006-.014-.012-.028-.018-.042-.005-.013-.01-.026-.015-.038-.005-.014-.011-.028-.016-.042-.005-.013-.009-.026-.014-.039-.005-.015-.01-.029-.014-.044-.004-.013-.008-.026-.011-.038-.004-.015-.009-.03-.013-.045-.004-.013-.007-.027-.01-.04-.003-.015-.007-.03-.01-.045-.003-.013-.005-.027-.008-.04-.003-.016-.006-.031-.009-.047-.002-.012-.004-.025-.006-.038-.003-.017-.005-.034-.008-.051-.003-.025-.006-.051-.008-.076-.001-.006-.001-.011-.001-.017-.002-.026-.004-.053-.005-.08 0-.004 0-.008 0-.012-.001-.028-.002-.057-.002-.085 0-.021 0-.042.001-.063 0-.006 0-.012.001-.018.001-.016.001-.031.002-.047 0-.006.001-.013.001-.019.001-.018.003-.036.005-.054 0-.002 0-.005.001-.007.002-.021.004-.041.007-.062.001-.005.001-.011.002-.016.002-.016.005-.031.007-.046.001-.006.002-.012.003-.018.003-.017.006-.033.009-.05.001-.004.001-.008.002-.011.004-.02.008-.041.013-.061.001-.003.002-.007.003-.01.004-.017.008-.034.013-.05.001-.005.003-.01.004-.015.005-.017.009-.033.014-.05.001-.003.002-.006.003-.009.006-.02.013-.04.019-.06 0-.001 0-.001 0-.001.007-.019.013-.038.02-.057.001-.004.003-.007.004-.011.006-.016.013-.033.019-.049.001-.003.003-.007.004-.01.016-.039.033-.077.052-.114.001-.002.002-.004.003-.007.008-.017.016-.033.025-.049.001-.003.003-.005.004-.008.01-.018.02-.036.03-.054.18-.321.447-.587.767-.771zm-4.117 3.867c-1.143 0-2.069-.926-2.069-2.069 0-.643.293-1.218.754-1.598.02-.017.041-.033.062-.049.003-.003.007-.005.01-.008.02-.015.04-.03.061-.044.004-.003.008-.006.012-.009l.063-.042c.003-.002.006-.003.008-.005.023-.014.046-.028.069-.041.001-.001.002-.001.003-.002.023-.013.046-.025.069-.038.003-.002.007-.003.01-.005.023-.012.046-.023.07-.034.003-.002.007-.003.011-.005.024-.011.048-.021.072-.031.003-.001.007-.003.01-.004.024-.01.049-.02.074-.029.002-.001.003-.001.004-.002.025-.009.05-.018.075-.026.003-.001.007-.002.01-.003.025-.008.051-.015.076-.022.004-.001.008-.002.011-.003.026-.007.052-.013.079-.019.003-.001.005-.001.008-.002.055-.012.11-.022.166-.03.003-.001.007-.001.01-.002.027-.003.054-.006.08-.009.005 0 .009-.001.014-.001.027-.002.055-.004.082-.005h.009c.029-.001.058-.002.088-.002.022 0 .044 0 .065.001.004 0 .009 0 .013.001.018.001.035.001.052.003.005 0 .01.001.015.001.043.003.085.007.127.013.004.001.008.001.011.002.017.002.034.005.05.008.006.001.011.002.017.003l.051.009c.003.001.007.001.01.002.021.004.042.009.063.014.001 0 .001 0 .002.001.019.005.038.009.057.014.004.001.009.002.013.003.017.005.035.01.052.015.003.001.005.002.008.002.02.006.04.013.061.02.001 0 .002.001.003.001.018.006.036.013.054.019.004.002.009.003.013.005.016.006.032.012.048.019.003.001.006.003.009.004.038.016.076.033.114.051.003.001.006.003.009.005.015.008.03.015.046.023.004.002.008.004.012.006.017.009.035.019.052.028.32.183.587.45.771.77.01.018.02.036.03.054.001.003.003.005.004.008.009.016.017.033.025.049.001.002.002.004.003.007.018.038.036.076.052.114.001.003.003.007.004.01.007.016.013.032.019.049.001.004.003.007.004.011.007.019.014.038.02.057 0 0 0 .001.001.001.007.02.013.04.019.06.001.003.002.006.003.009.005.017.01.033.014.05.001.005.003.01.004.015.004.017.009.033.013.05.001.003.002.007.002.01.005.02.009.04.013.061.001.004.001.008.002.011.003.017.006.033.009.05.001.006.002.012.003.018.003.016.005.031.007.046.001.005.001.011.002.016.003.02.005.041.007.062 0 .003.001.005.001.007.002.018.003.036.005.054.001.006.001.013.001.019.001.016.002.031.002.047 0 .006 0 .012.001.018.001.021.001.042.001.063 0 .029-.001.057-.002.085v.012c-.001.027-.003.053-.005.08 0 .005-.001.011-.001.017-.002.025-.005.051-.008.076-.002.017-.005.034-.008.051-.002.012-.004.025-.006.038-.003.016-.006.031-.009.047-.003.014-.005.027-.008.04-.003.015-.007.03-.011.045-.003.013-.007.027-.01.04-.004.015-.009.03-.013.045-.004.013-.007.026-.011.038-.005.015-.01.03-.015.045-.004.012-.008.025-.013.038-.005.015-.011.029-.017.044-.005.012-.009.025-.014.037-.006.014-.012.028-.018.042-.005.012-.011.025-.016.038-.006.014-.013.027-.019.04-.006.012-.012.025-.018.037-.007.013-.013.026-.02.038-.007.013-.014.026-.021.039-.007.012-.013.024-.02.036-.007.013-.015.025-.022.037-.008.012-.015.024-.023.036s-.016.024-.024.036-.016.023-.024.035-.017.023-.025.035c-.008.011-.017.023-.025.034-.009.011-.018.023-.027.034-.011.014-.022.027-.033.041-.002.002-.003.004-.005.006-.017.019-.034.039-.051.058-.002.002-.004.004-.006.007-.035.038-.072.075-.11.11-.002.002-.005.005-.007.007-.019.017-.038.034-.057.05-.002.002-.004.004-.007.006-.04.034-.082.067-.125.098-.001.001-.003.002-.004.003-.021.015-.042.03-.064.044-.003.002-.005.003-.008.005-.044.029-.09.057-.136.082-.002.001-.003.002-.005.003-.023.013-.047.025-.07.037-.002.001-.004.002-.006.003-.024.012-.049.024-.073.035 0 0-.001 0-.001.001-.025.011-.05.022-.076.032-.001 0-.001.001-.002.001-.025.01-.049.019-.075.028-.003.001-.006.002-.009.003-.025.009-.05.017-.075.025-.002.001-.004.001-.006.002-.026.008-.052.015-.078.022-.001 0-.001 0-.001 0-.026.007-.052.013-.078.019-.003.001-.007.001-.01.002-.026.006-.052.011-.078.015-.002 0-.005.001-.007.001-.027.005-.055.009-.082.012-.092.011-.181.017-.272.017zm2.376 2.702c0 .138-.112.25-.25.25h-.909c-.223 0-.335-.27-.177-.427l.909-.909c.158-.158.427-.046.427.177zm1.552.25h-.909c-.138 0-.25-.112-.25-.25v-.909c0-.223.27-.335.427-.177l.909.909c.157.158.046.427-.177.427z\" fill=\"#d1d3d4\"/><path d=\"m127.97 141.835c.374 0 .725.099 1.027.273l-3.933-3.933c.398-.398.398-1.043 0-1.441s-1.043-.398-1.441 0c-.275.275-.36.669-.254 1.017-.348-.106-.742-.021-1.017.254-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0l2.861 2.861c.358-.295.817-.472 1.316-.472z\" fill=\"#1caee4\"/><path d=\"m138.731 150.4c-.398-.398-1.043-.398-1.441 0l-4.443-4.443c-.93-.12-1.666-.856-1.786-1.786l-1.294-1.294c.174.303.273.653.273 1.027 0 .5-.177.958-.472 1.316l6.451 6.451c-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0c.275-.275.36-.669.254-1.017.348.106.742.021 1.017-.254.398-.398.398-1.043 0-1.441z\" fill=\"#1caee4\"/><path d=\"m127.126 141.836-2.861-2.861c-.398.398-1.043.398-1.441 0-.315-.315-.38-.786-.196-1.166-.1.048-.193.114-.275.196-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0l2.861 2.861c.358-.295.816-.472 1.316-.472.374 0 .725.099 1.027.273l-.736-.736c-.43.036-.822.205-1.136.464z\" fill=\"#009add\"/><path d=\"m136.49 152.641c-.398-.398-.398-1.043 0-1.441l-6.451-6.451c.259-.314.428-.707.464-1.136l-.736-.736c.174.303.273.653.273 1.027 0 .5-.177.958-.472 1.316l6.451 6.451c-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0c.083-.083.148-.176.196-.275-.38.184-.851.119-1.166-.196z\" fill=\"#009add\"/><path d=\"m131.516 145.22c-.295-.358-.472-.816-.472-1.316 0-.374.099-.725.273-1.027l-1.294 1.294c-.12.93-.856 1.666-1.786 1.786l-4.443 4.443c-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441c.275.275.669.36 1.017.254-.106.348-.021.742.254 1.017.398.398 1.043.398 1.441 0s.398-1.043 0-1.441z\" fill=\"#1caee4\"/><path d=\"m138.731 138.005c-.275-.275-.669-.36-1.017-.254.106-.348.021-.742-.254-1.017-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441l-3.933 3.933c.303-.173.653-.273 1.027-.273.5 0 .958.177 1.316.472l2.861-2.861c.398.398 1.043.398 1.441 0s.398-1.043 0-1.441z\" fill=\"#1caee4\"/><path d=\"m131.516 145.22c-.295-.358-.472-.816-.472-1.316 0-.374.099-.725.273-1.027l-.741.741c.039.425.206.813.463 1.124l-6.451 6.451c.398.398.398 1.043 0 1.441-.314.314-.783.38-1.161.198.048.101.114.196.198.279.398.398 1.043.398 1.441 0s.398-1.043 0-1.441z\" fill=\"#009add\"/><path d=\"m138.731 138.005c-.084-.084-.178-.15-.279-.198.182.379.116.847-.198 1.162-.398.398-1.043.398-1.441 0l-2.861 2.861c-.311-.257-.699-.424-1.124-.463l-.741.741c.303-.173.653-.273 1.027-.273.5 0 .958.177 1.316.472l2.861-2.861c.398.398 1.043.398 1.441 0 .397-.398.397-1.043-.001-1.441z\" fill=\"#009add\"/><path d=\"m136.872 145.213c0-3.496-2.834-6.33-6.33-6.33s-6.33 2.834-6.33 6.33c0 2.387 1.321 4.465 3.271 5.543v2.464c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-1.697c.166.013.333.02.502.02s.336-.007.502-.02v1.697c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-2.464c1.95-1.079 3.271-3.157 3.271-5.543zm-10.971-1.309c0-1.143.926-2.069 2.069-2.069s2.069.926 2.069 2.069-.926 2.069-2.069 2.069c-1.142 0-2.069-.926-2.069-2.069zm4.444 4.771c0 .138-.112.25-.25.25h-.909c-.223 0-.335-.27-.177-.427l.909-.909c.158-.158.427-.046.427.177zm.394 0v-.909c0-.223.27-.335.427-.177l.909.909c.158.158.046.427-.177.427h-.909c-.138 0-.25-.112-.25-.25zm2.375-2.702c-1.143 0-2.07-.926-2.07-2.069s.927-2.069 2.07-2.069 2.069.926 2.069 2.069-.926 2.069-2.069 2.069z\" fill=\"#ef5a9d\"/><g fill=\"#e43d91\"><path d=\"m133.114 141.007c-1.143 0-2.069.926-2.069 2.069 0 .142.014.28.041.414.192-.945 1.027-1.656 2.028-1.656s1.836.711 2.028 1.656c.027-.134.041-.272.041-.414 0-1.143-.926-2.069-2.069-2.069z\"/><path d=\"m127.97 141.007c-1.143 0-2.069.926-2.069 2.069 0 .142.014.28.041.414.192-.945 1.027-1.656 2.028-1.656s1.836.711 2.028 1.656c.027-.134.042-.272.042-.414 0-1.143-.927-2.069-2.07-2.069z\"/><path d=\"m127.484 149.928c-1.837-1.016-3.116-2.918-3.258-5.13-.009.137-.014.275-.014.415 0 2.387 1.321 4.465 3.271 5.543v-.828z\"/><path d=\"m133.6 149.928v.828c1.951-1.079 3.271-3.157 3.271-5.543 0-.139-.005-.278-.013-.415-.142 2.212-1.42 4.114-3.258 5.13z\"/><path d=\"m132.935 153.058h-1.225c-.368 0-.666-.298-.666-.666v.828c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-.828c-.001.368-.299.666-.666.666z\"/><path d=\"m129.374 153.058h-1.225c-.368 0-.666-.298-.666-.666v.828c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-.828c0 .368-.298.666-.666.666z\"/><path d=\"m131.044 150.695c-.166.013-.333.02-.502.02s-.337-.007-.502-.02v.828c.166.013.333.02.502.02s.336-.007.502-.02z\"/></g><circle cx=\"83.042\" cy=\"145.243\" fill=\"#fff\" r=\"14.625\"/><path d=\"m89.79 151.526-1.56-1.56c.719-1.027 1.142-2.278 1.142-3.627 0-1.498-.521-2.874-1.39-3.958l1.809-1.809c.398.398 1.043.398 1.441 0s.398-1.043 0-1.441c-.275-.275-.669-.36-1.017-.254.106-.348.021-.742-.254-1.017-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441l-1.85 1.85c-1.027-.719-2.278-1.142-3.627-1.142s-2.6.423-3.627 1.142l-1.85-1.85c.398-.398.398-1.043 0-1.441s-1.043-.398-1.441 0c-.275.275-.36.669-.254 1.017-.348-.106-.742-.021-1.017.254-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0l1.809 1.809c-.87 1.084-1.39 2.46-1.39 3.958 0 1.349.422 2.6 1.142 3.627l-1.56 1.56c-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441c.275.275.669.36 1.017.254-.106.348-.021.742.254 1.017.398.398 1.043.398 1.441 0s.398-1.043 0-1.441l1.519-1.519c.281.226.582.428.9.604v2.464c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-1.697c.166.013.333.02.502.02s.336-.007.502-.02v1.697c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-2.464c.318-.176.619-.378.9-.604l1.519 1.519c-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0c.275-.275.36-.669.254-1.017.348.106.742.021 1.017-.254.398-.398.398-1.043 0-1.441-.402-.398-1.047-.398-1.445 0zm-5.203-8.294c.017-.01.034-.019.052-.028l.012-.006c.015-.008.03-.016.046-.023.003-.001.006-.003.009-.005.037-.018.075-.035.114-.051.003-.001.006-.002.009-.004.016-.007.032-.013.048-.019.005-.002.009-.003.013-.005.018-.007.036-.013.054-.019.001 0 .002-.001.003-.001.02-.007.04-.013.061-.02.003-.001.005-.002.008-.002l.051-.015c.004-.001.008-.002.013-.003.019-.005.038-.01.057-.014.001 0 .002 0 .002-.001.021-.005.042-.009.063-.014.003-.001.007-.001.01-.002.017-.003.034-.006.05-.009.006-.001.011-.002.017-.003.017-.003.034-.005.05-.008.004-.001.008-.001.011-.002.042-.005.084-.01.127-.013.005 0 .01-.001.015-.001.018-.001.035-.002.052-.003.004 0 .009 0 .013-.001.021-.001.043-.001.065-.001.029 0 .058.001.088.002h.009c.028.001.055.003.082.005.005 0 .009.001.014.001.027.003.054.005.08.009.004.001.007.001.01.002.056.008.112.018.167.03.003.001.005.001.008.002.026.006.053.012.079.019.004.001.007.002.011.003.026.007.051.015.076.022.003.001.006.002.01.003.025.008.05.017.075.026.002.001.003.001.004.002.025.009.049.019.074.029.003.001.007.003.01.004.024.01.048.021.072.031.004.002.007.003.011.005.024.011.047.022.07.034.003.002.006.003.01.005.023.012.046.025.069.038.001.001.002.001.003.002.023.013.046.027.069.041.003.002.006.003.008.005.021.014.042.028.063.042.004.003.008.006.012.009.021.014.041.029.061.044.003.002.007.005.01.008.021.016.041.032.062.049.46.38.754.954.754 1.598 0 1.143-.926 2.069-2.069 2.069-.09 0-.179-.006-.267-.017-.028-.004-.055-.008-.082-.012-.002 0-.005-.001-.007-.001-.026-.005-.052-.01-.078-.015-.003-.001-.007-.001-.01-.002-.026-.006-.052-.012-.078-.019h-.001c-.026-.007-.052-.014-.078-.022-.002-.001-.004-.001-.006-.002-.025-.008-.05-.016-.075-.025-.003-.001-.006-.002-.009-.003-.025-.009-.05-.018-.075-.028-.001 0-.001-.001-.002-.001-.026-.01-.051-.021-.076-.032 0 0-.001 0-.001-.001-.025-.011-.049-.023-.073-.035-.002-.001-.004-.002-.006-.003-.024-.012-.047-.024-.07-.037-.002-.001-.003-.002-.005-.003-.047-.026-.092-.053-.137-.082-.002-.002-.005-.003-.007-.005-.022-.014-.043-.029-.064-.044-.001-.001-.003-.002-.004-.003-.043-.031-.085-.064-.125-.098-.002-.002-.004-.004-.006-.006-.019-.016-.038-.033-.057-.05-.002-.002-.005-.005-.007-.007-.038-.035-.075-.072-.11-.11-.002-.002-.004-.004-.006-.007-.017-.019-.034-.038-.051-.058-.002-.002-.003-.004-.005-.006-.011-.014-.022-.027-.033-.041-.009-.011-.018-.023-.027-.034s-.017-.023-.026-.034c-.009-.012-.017-.023-.025-.035s-.016-.023-.024-.035-.016-.024-.024-.036-.015-.024-.023-.036c-.007-.012-.015-.025-.022-.037s-.014-.024-.02-.036c-.007-.013-.014-.026-.021-.039s-.013-.025-.02-.038c-.006-.012-.012-.025-.018-.037-.007-.013-.013-.027-.019-.04-.006-.012-.011-.025-.017-.038-.006-.014-.012-.028-.018-.042-.005-.013-.01-.026-.015-.038-.005-.014-.011-.028-.016-.042-.005-.013-.009-.026-.013-.039-.005-.015-.01-.029-.014-.044-.004-.013-.007-.026-.011-.038-.004-.015-.009-.03-.013-.045-.004-.013-.007-.027-.01-.04-.004-.015-.007-.03-.011-.045-.003-.013-.006-.027-.008-.04-.003-.016-.006-.031-.009-.047-.002-.012-.004-.025-.006-.038-.003-.017-.005-.034-.008-.051-.003-.025-.006-.051-.008-.076-.001-.006-.001-.011-.002-.017-.002-.026-.004-.053-.005-.08 0-.004 0-.008 0-.012-.001-.028-.002-.057-.002-.085 0-.021 0-.042.001-.063 0-.006 0-.012.001-.018.001-.016.001-.031.002-.047 0-.006.001-.013.001-.019.001-.018.003-.036.005-.054 0-.002 0-.005.001-.007.002-.021.004-.041.007-.062.001-.005.002-.011.002-.016.002-.016.004-.031.007-.046.001-.006.002-.012.003-.018.003-.017.006-.033.009-.05.001-.004.001-.008.002-.011.004-.02.009-.041.013-.061.001-.003.002-.007.002-.01.004-.017.008-.034.013-.05.001-.005.003-.01.004-.015.005-.017.009-.033.014-.05.001-.003.002-.006.003-.009.006-.02.013-.04.019-.06 0-.001 0-.001.001-.001.007-.019.013-.038.02-.057.001-.004.003-.007.004-.011.006-.016.013-.033.019-.049.001-.003.003-.007.004-.01.016-.039.033-.077.052-.114.001-.002.002-.004.003-.007.008-.017.017-.033.025-.049.001-.003.003-.005.004-.008.01-.018.02-.036.03-.054.181-.321.448-.587.768-.771zm-4.117 3.867c-1.143 0-2.069-.926-2.069-2.069 0-.643.294-1.218.754-1.598.02-.017.041-.033.062-.049.003-.003.006-.005.01-.008.02-.015.04-.03.061-.044.004-.003.008-.006.012-.009.021-.014.042-.028.063-.042.003-.002.006-.003.008-.005.023-.014.046-.028.069-.041.001-.001.002-.001.003-.002.022-.013.046-.025.069-.038.003-.002.007-.003.01-.005.023-.012.046-.023.07-.034.004-.002.007-.003.011-.005.024-.011.048-.021.072-.031.003-.001.007-.003.01-.004.024-.01.049-.02.074-.029.002-.001.003-.001.004-.002.025-.009.05-.018.075-.026.003-.001.007-.002.01-.003.025-.008.051-.015.076-.022.004-.001.007-.002.011-.003.026-.007.052-.013.079-.019.003-.001.005-.001.008-.002.055-.012.11-.022.166-.03.003-.001.007-.001.01-.002.027-.003.053-.006.08-.009.005 0 .009-.001.014-.001.027-.002.055-.004.082-.005h.009c.029-.001.058-.002.088-.002.022 0 .043 0 .065.001.004 0 .009 0 .013.001.017.001.035.001.052.003.005 0 .01.001.015.001.043.003.085.007.127.013.004.001.008.001.011.002.017.002.034.005.05.008.006.001.011.002.017.003.017.003.034.006.05.009.003.001.007.001.01.002.021.004.042.009.063.014.001 0 .001 0 .002.001.019.005.038.009.057.014.004.001.009.002.013.003.017.005.035.01.052.015.003.001.006.002.008.002.02.006.04.013.06.02.001 0 .002.001.003.001.018.006.036.013.054.019.005.002.009.003.013.005.016.006.032.012.048.019.003.001.006.003.009.004.038.016.076.033.114.051.003.001.006.003.009.005.015.008.03.015.046.023l.012.006c.017.009.035.019.051.028.32.183.587.45.771.77.01.018.02.036.03.054.001.003.003.005.004.008.009.016.017.033.025.049.001.002.002.004.003.007.018.038.036.076.052.114.001.003.003.007.004.01.007.016.013.032.019.049.001.004.003.007.004.011.007.019.014.038.02.057 0 0 0 .001.001.001.007.02.013.04.019.06.001.003.002.006.003.009.005.017.01.033.014.05.001.005.003.01.004.015.004.017.009.033.013.05.001.003.002.007.002.01.005.02.009.04.013.061.001.004.001.008.002.011.003.017.006.033.009.05.001.006.002.012.003.018.003.016.005.031.007.046.001.005.002.011.002.016.003.02.005.041.007.062 0 .003.001.005.001.007.002.018.003.036.005.054.001.006.001.013.001.019.001.016.002.031.002.047 0 .006 0 .012.001.018.001.021.001.042.001.063 0 .029-.001.057-.002.085v.012c-.001.027-.003.053-.005.08 0 .005-.001.011-.002.017-.002.025-.005.051-.008.076-.002.017-.005.034-.008.051-.002.012-.004.025-.006.038-.003.016-.006.031-.009.047-.003.014-.005.027-.008.04-.003.015-.007.03-.01.045-.003.013-.007.027-.01.04-.004.015-.008.03-.013.045-.004.013-.007.026-.011.038-.005.015-.01.03-.015.045-.004.012-.008.025-.013.038-.005.015-.011.029-.016.044-.005.012-.01.025-.014.037-.006.014-.012.028-.018.042-.005.012-.011.025-.017.038-.006.014-.013.027-.019.04-.006.012-.012.025-.018.037-.007.013-.013.026-.02.038-.007.013-.014.026-.021.039-.007.012-.014.024-.021.036-.007.013-.015.025-.022.037s-.015.024-.023.036-.016.024-.024.036-.016.023-.024.035-.017.023-.025.035c-.008.011-.017.023-.026.034s-.018.023-.027.034c-.011.014-.022.027-.033.041-.002.002-.003.004-.005.006-.017.019-.034.039-.051.058-.002.002-.004.004-.006.007-.035.038-.072.075-.11.11-.002.002-.005.005-.007.007-.019.017-.038.034-.057.05-.002.002-.004.004-.007.006-.04.034-.082.067-.125.098-.001.001-.003.002-.004.003-.021.015-.042.03-.064.044-.003.002-.005.003-.008.005-.044.029-.09.057-.136.082-.002.001-.003.002-.005.003-.023.013-.047.025-.07.037-.002.001-.004.002-.006.003-.024.012-.049.024-.073.035 0 0-.001 0-.001.001-.025.011-.05.022-.076.032-.001 0-.001.001-.002.001-.025.01-.049.019-.075.028-.003.001-.006.002-.009.003-.025.009-.05.017-.075.025-.002.001-.004.001-.006.002-.026.008-.052.015-.078.022-.001 0-.001 0-.001 0-.026.007-.052.013-.078.019-.003.001-.007.001-.01.002-.026.006-.052.011-.078.015-.002 0-.005.001-.007.001-.027.005-.055.009-.082.012-.087.011-.176.017-.267.017zm2.375 2.702c0 .138-.112.25-.25.25h-.909c-.223 0-.335-.27-.177-.427l.909-.909c.158-.158.427-.046.427.177zm1.553.25h-.909c-.138 0-.25-.112-.25-.25v-.909c0-.223.27-.335.427-.177l.909.909c.157.158.046.427-.177.427z\" fill=\"#d1d3d4\"/><path d=\"m80.47 141.835c.374 0 .725.099 1.027.273l-3.933-3.933c.398-.398.398-1.043 0-1.441s-1.043-.398-1.441 0c-.275.275-.36.669-.254 1.017-.348-.106-.742-.021-1.017.254-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0l2.861 2.861c.358-.295.817-.472 1.316-.472z\" fill=\"#1caee4\"/><path d=\"m91.231 150.4c-.398-.398-1.043-.398-1.441 0l-4.443-4.443c-.93-.12-1.666-.856-1.786-1.786l-1.294-1.294c.173.303.273.653.273 1.027 0 .5-.177.958-.472 1.316l6.451 6.451c-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0c.275-.275.36-.669.254-1.017.348.106.742.021 1.017-.254.398-.398.398-1.043 0-1.441z\" fill=\"#1caee4\"/><path d=\"m79.626 141.836-2.861-2.861c-.398.398-1.043.398-1.441 0-.315-.315-.38-.786-.196-1.166-.099.048-.193.114-.275.196-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0l2.861 2.861c.358-.295.816-.472 1.316-.472.374 0 .725.099 1.027.273l-.736-.736c-.43.036-.822.205-1.136.464z\" fill=\"#009add\"/><path d=\"m88.99 152.641c-.398-.398-.398-1.043 0-1.441l-6.451-6.451c.259-.314.428-.707.464-1.136l-.736-.736c.173.303.273.653.273 1.027 0 .5-.177.958-.472 1.316l6.451 6.451c-.398.398-.398 1.043 0 1.441s1.043.398 1.441 0c.083-.083.148-.176.196-.275-.38.184-.851.119-1.166-.196z\" fill=\"#009add\"/><path d=\"m84.016 145.22c-.295-.358-.472-.816-.472-1.316 0-.374.099-.725.273-1.027l-1.294 1.294c-.12.93-.856 1.666-1.786 1.786l-4.443 4.443c-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441c.275.275.669.36 1.017.254-.106.348-.021.742.254 1.017.398.398 1.043.398 1.441 0s.398-1.043 0-1.441z\" fill=\"#1caee4\"/><path d=\"m91.231 138.005c-.275-.275-.669-.36-1.017-.254.106-.348.021-.742-.254-1.017-.398-.398-1.043-.398-1.441 0s-.398 1.043 0 1.441l-3.933 3.933c.303-.173.654-.273 1.027-.273.5 0 .958.177 1.316.472l2.861-2.861c.398.398 1.043.398 1.441 0s.398-1.043 0-1.441z\" fill=\"#1caee4\"/><path d=\"m84.016 145.22c-.295-.358-.472-.816-.472-1.316 0-.374.099-.725.273-1.027l-.741.741c.039.425.206.813.463 1.124l-6.451 6.451c.398.398.398 1.043 0 1.441-.314.314-.783.38-1.161.198.048.101.114.196.198.279.398.398 1.043.398 1.441 0s.398-1.043 0-1.441z\" fill=\"#009add\"/><path d=\"m91.231 138.005c-.084-.084-.179-.15-.28-.198.182.379.116.847-.198 1.162-.398.398-1.043.398-1.441 0l-2.861 2.861c-.311-.257-.699-.424-1.124-.463l-.741.741c.303-.173.654-.273 1.027-.273.5 0 .958.177 1.316.472l2.861-2.861c.398.398 1.043.398 1.441 0s.398-1.043 0-1.441z\" fill=\"#009add\"/><path d=\"m89.372 145.213c0-3.496-2.834-6.33-6.33-6.33s-6.33 2.834-6.33 6.33c0 2.387 1.321 4.465 3.271 5.543v2.464c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-1.697c.166.013.333.02.502.02s.337-.007.502-.02v1.697c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-2.464c1.95-1.079 3.271-3.157 3.271-5.543zm-10.971-1.309c0-1.143.926-2.069 2.069-2.069s2.069.926 2.069 2.069-.927 2.069-2.069 2.069-2.069-.926-2.069-2.069zm4.444 4.771c0 .138-.112.25-.25.25h-.909c-.223 0-.335-.27-.177-.427l.909-.909c.158-.158.427-.046.427.177zm.394 0v-.909c0-.223.27-.335.427-.177l.909.909c.158.158.046.427-.177.427h-.909c-.138 0-.25-.112-.25-.25zm2.375-2.702c-1.143 0-2.069-.926-2.069-2.069s.926-2.069 2.069-2.069 2.069.926 2.069 2.069-.927 2.069-2.069 2.069z\" fill=\"#ef5a9d\"/><path d=\"m85.614 141.007c-1.143 0-2.069.926-2.069 2.069 0 .142.014.28.042.414.192-.945 1.027-1.656 2.028-1.656s1.836.711 2.028 1.656c.027-.134.041-.272.041-.414-.001-1.143-.928-2.069-2.07-2.069z\" fill=\"#e43d91\"/><path d=\"m80.47 141.007c-1.143 0-2.069.926-2.069 2.069 0 .142.014.28.041.414.192-.945 1.027-1.656 2.028-1.656s1.836.711 2.028 1.656c.027-.134.041-.272.041-.414.001-1.143-.926-2.069-2.069-2.069z\" fill=\"#e43d91\"/><path d=\"m79.983 149.928c-1.837-1.016-3.116-2.918-3.258-5.13-.009.137-.013.275-.013.415 0 2.387 1.321 4.465 3.271 5.543z\" fill=\"#e43d91\"/><path d=\"m86.1 149.928v.828c1.951-1.079 3.271-3.157 3.271-5.543 0-.139-.005-.278-.013-.415-.142 2.212-1.42 4.114-3.258 5.13z\" fill=\"#e43d91\"/><path d=\"m85.435 153.058h-1.225c-.368 0-.666-.298-.666-.666v.828c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-.828c-.001.368-.299.666-.666.666z\" fill=\"#e43d91\"/><path d=\"m81.874 153.058h-1.225c-.368 0-.666-.298-.666-.666v.828c0 .368.298.666.666.666h1.225c.368 0 .666-.298.666-.666v-.828c0 .368-.298.666-.666.666z\" fill=\"#e43d91\"/><path d=\"m83.544 150.695c-.166.013-.333.02-.502.02s-.337-.007-.502-.02v.828c.166.013.333.02.502.02s.337-.007.502-.02z\" fill=\"#e43d91\"/><path d=\"m193.811 114.48h-131.622c-1.304 0-2.442-.708-3.051-1.761-.3.518-.471 1.12-.471 1.761 0 1.946 1.577 3.523 3.523 3.523h131.621c1.946 0 3.523-1.577 3.523-3.523 0-.642-.172-1.243-.471-1.761-.61 1.052-1.748 1.761-3.052 1.761z\" fill=\"#e7ad27\"/><path d=\"m193.811 168.769h-131.622c-1.304 0-2.442-.708-3.051-1.761-.3.518-.471 1.12-.471 1.761 0 1.946 1.577 3.523 3.523 3.523h131.621c1.946 0 3.523-1.577 3.523-3.523 0-.642-.172-1.243-.471-1.761-.61 1.052-1.748 1.761-3.052 1.761z\" fill=\"#e7ad27\"/></g></switch></svg>\n    )\n}\n","import React from 'react'\nimport UnExpiredSvgIcon from './UnExpiredSvgIcon'\nexport default function Unexpired(props) {\n\n    const { Upper } = props;\n    return (\n        <div>\n            <div><Upper>date:</Upper><p className=\"font-weight-bold text-info\">There is no expiration date</p>\n                <UnExpiredSvgIcon />\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport UnexpectedDetails from './UnexpectedDetails'\nimport Unexpired from './Unexpired';\n\nconst Upper = styled.span`\n  text-transform: uppercase;\n  text-decoration: underline;\n`;\nexport class WhouseDetails extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            product: null,\n            quantity: 0,\n            expired: null,\n            retrievedData: 'initial'\n\n        };\n    }\n    activeWarehouse = this.setActiveWH(this.props.activeWarehouse);\n    URL = `wh-${this.activeWarehouse}-details.json`;\n    stateArr = [];\n    counter = 0;\n    async getWarehouseStock() {\n        this.setActiveWH(this.props.activeWarehouse);\n        await fetch(this.URL, {\n            mode: 'no-cors',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(data => {\n                if(!data.length) {\n                    this.setState({\n                        product: data.product,\n                        quantity: data.quantity,\n                        expired: data.expired,\n                        retrievedData: 'normal'\n                    })\n                }\n                else {\n                    let product, quantity, expierd;\n                    const newState = {};\n                    for(let i = 0; i < data.length; i++) {\n                        product = 'product ' + (i+1);\n                        quantity = 'quantity' + (i+1);\n                        expierd = 'expierd' + (i+1);\n                        newState[product] = data[i].product;\n                        newState[quantity] = data[i].quantity;\n                        newState[expierd] = data[i].expired;                       \n                    }\n                    newState.retrievedData = 'unexpected';\n                    this.setState(newState);\n                }\n            })\n            .catch(e => {\n                this.setState({error: 'error displaying the data'})\n                console.error(`\\x1b[36m${e}`)\n            })\n        return this.state;\n    }\n    async stateToArr() {\n        const stateData = await this.getWarehouseStock();\n        for (const property in stateData) {\n            if(!stateData[property]) continue; // handle unexpected data\n\n        //    handle data missing\n                if(stateData[property] !== 'No expiration date') {\n                    this.stateArr.push(property, stateData[property]);\n                }\n        }\n\n        // handle duplicate data\n        for(let i = 1; i < this.stateArr.length; i++) {\n            if(this.stateArr[i] === this.stateArr[0]) {\n                this.stateArr.splice(0 , i)\n                break;\n            }\n            \n        }\n    }\n    setActiveWH(WH) {\n        const activate = WH.filter(wh => (wh.active));\n        const activeWarehouse = activate[0].name\n        return activeWarehouse;\n    }\n    componentDidMount() {\n        this.getWarehouseStock(this.stateToArr);\n\n    }\n    componentDidUpdate() {\n\n        if (this.counter > 1) return;\n        this.stateToArr();\n        this.counter++;\n    }\n\n    render() {\n        const { product, quantity, expired, error } = this.state;\n        return (\n            this.state.retrievedData === 'unexpected' ?\n            <UnexpectedDetails details={this.stateArr} Upper={Upper}/>\n            :\n            <div>   \n                    {error ? <h3 style={{color: 'red'}}>Problem getting Warehouse data</h3>\n                    :\n                    <>          \n                    <details style={{position: 'absolute', marginLeft: '50px'}}>\n                        <summary>Warehouse available info</summary>\n                        {this.stateArr.map((value,i) => {\n                           return i % 2 === 0 && (i !== this.stateArr.length-2) &&  //  show only keys and not the last one\n                                (<small className=\"text-info\" style={{ display: 'block', textAlign: 'center', fontSize: '100%' }} key={i}>{value}{i===0 &&'s'} </small>)\n                        })}\n                    </details>\n                    <section>\n                        <div><Upper>product</Upper>:<p className=\"font-weight-bold text-primary\">{product}</p></div>\n                        <div><Upper>current quantity</Upper>:<p className=\"font-weight-bold text-success\">{quantity}</p></div>\n                        {expired==='No expiration date'?\n                        <div><Upper>expiration date</Upper>:<p className=\"font-weight-bold text-info\">{expired}</p></div>\n                        :\n                        new Date(expired).toLocaleString() === 'Invalid Date'?\n                        <Unexpired Upper={Upper}/>\n                        :\n                        <div><Upper>expiration date</Upper>:<p className=\"font-weight-bold text-info\">{new Date(expired).toLocaleString()}</p></div>\n                    }\n                    </section>\n                    </>\n                    }\n            </div>\n        )\n    }\n}\n\nexport default WhouseDetails\n","import React, { useEffect } from 'react'\nimport { Button } from 'reactstrap'\n\nexport default function CanvasGraphicDetails({ activeWarehouse }) {\n    let [currentWH] = activeWarehouse.filter(wh => wh.active);\n    currentWH = currentWH.name;\n    const URL = `wh-${currentWH}-history.json`;\n    function getMonthesData() {\n        fetch(URL, {\n            mode: 'no-cors',\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n        }).then(res => res.json())\n            .then(data => {\n                return drawCompBase(data);\n            })\n            .catch(e => {\n                console.error(`\\x1b[43m${e}`)\n                return toggleErr(e)\n            })\n\n    }\n\n    const [units, setUnits] = React.useState(1000)\n    let lineGraph, normalizeNum,\n        monthGraph, monthGraphNames, monthesLength,\n        canvasHeight, canvasWidth;\n\n    function drawCompBase(data) {\n\n        // getting the fetched data\n\n        const monthInvetoryData = data;\n\n        // and mapping it for using later to draw\n\n        lineGraph = monthInvetoryData.map(item => item.quantity);\n        monthGraph = monthInvetoryData.map(item => item.month);\n        monthGraphNames = monthGraph.map(month => {\n            return new Date(month.toLocaleString(\"en-us\", { month: \"short\" }))\n        })\n        for (let i = 0; i < monthGraphNames.length; ++i) {\n            monthGraphNames[i] = monthGraphNames[i].toString().substr(3, 5).trim();\n        }\n\n        // scaling the canvas before building and drawing\n\n        canvasHeight = (Math.max(...lineGraph) + 50);\n        // handle big quantity of stock\n        normalizeNum = proportionsMeasure(canvasHeight);\n        canvasHeight /= normalizeNum;\n        monthesLength = monthGraphNames.length;\n        canvasWidth = monthesLength * 100;\n        scaleCanvasWidth(canvasWidth);\n        scaleCanvasHeight(canvasHeight);\n        return graphViewFlag ? drawCompData(normalizeNum) : drawLtrGraph(normalizeNum);\n    }\n    function proportionsMeasure(height = 500) {\n        const numToStr = height.toString()\n        const digitsCounter = numToStr.length;\n        if (digitsCounter > 3) {\n            const normalizeNum = 10 ** Math.abs(3 - digitsCounter);\n            setUnits(1000 * normalizeNum);\n            return normalizeNum;\n        } else {\n            return 1;\n        }\n    }\n    function drawCompData(normalizeNum) {\n\n        // drawing main canvas\n\n        const canvas = mainCanvasRef.current;\n        if (!canvas) return; // console errors\n        const middleX = canvas.width / 2;\n        const middleY = canvas.height / 2;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n        ctx.fillStyle = \"lightblue\";\n        ctx.strokeStyle = '#008fb0';\n        ctx.lineWidth = 5;\n        ctx.beginPath();\n        ctx.moveTo(0, middleY);\n        let i, lineLength, monthX;\n        lineLength = lineGraph.length;\n        lineGraph.forEach((value, i) => {\n            lineGraph[i] = value / normalizeNum\n        })\n        monthX = 0;\n        for (i = 0; i < lineLength; ++i) {\n            monthX += 100;\n            ctx.lineTo(monthX, lineGraph[i]);\n            ctx.save();\n            ctx.font = \"20px Arial\";\n            ctx.fillStyle = \"red\";\n            ctx.translate(monthX, lineGraph[i])\n            ctx.rotate(Math.PI);\n            ctx.fillText(lineGraph[i], 10, 0);\n            ctx.rotate(Math.PI * (-1));\n            ctx.restore();\n        }\n        ctx.stroke();\n\n        // drwing secondary canvas\n\n        const secondaryCanvas = secondaryCanvasRef.current;\n        const secondaryCtx = secondaryCanvas.getContext(\"2d\");\n        secondaryCtx.clearRect(0, 0, canvasWidth, canvasHeight)\n        monthX = 0;\n        secondaryCtx.font = \"15px Comic Sans\";\n        for (i = monthesLength - 1; i >= 0; --i) {\n            let currentMonth = monthGraphNames[i];\n            secondaryCtx.fillText(currentMonth, monthX, 10);\n            monthX += 100;\n        }\n\n        // arrow line\n        ctx.beginPath();\n        ctx.moveTo(middleX, 20);\n        ctx.lineTo(middleX + 80, 20);\n        ctx.stroke();\n        // arrow head\n        ctx.beginPath();\n        ctx.moveTo(middleX + 60, 1);\n        ctx.lineTo(middleX + 80, 20);\n        ctx.lineTo(middleX + 60, 40);\n        ctx.stroke();\n    }\n    function drawLtrGraph(normalizeNum) {\n\n        // drawing main alternative canvas\n\n        const ltrCanvas = ltrMainCanvasRef.current;\n        const ltrCtx = ltrCanvas.getContext(\"2d\");\n        ltrCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n        ltrCtx.fillStyle = \"lightblue\";\n        ltrCtx.font = \"20px Arial\";\n        ltrCtx.beginPath();\n        ltrCtx.moveTo(0, canvasHeight / 2);\n        let i, lineLength, monthX, currentPoint, currentQuantity;\n        lineLength = lineGraph.length;\n        monthX = 0;\n        // altentive solution first part\n        for (i = 0; i < lineLength; ++i) {\n            monthX += 100\n            lineGraph[i] /= normalizeNum;\n            currentPoint = Math.abs((canvasHeight - lineGraph[i]));\n            currentQuantity = lineGraph[i];\n            ltrCtx.lineTo(monthX, currentPoint);\n            ltrCtx.fillText(currentQuantity, monthX + 20, currentPoint - 5)\n        }\n        ltrCtx.stroke();\n\n        // drwing secondary alternative canvas\n\n        const ltrSecondaryCanvas = ltrSecondaryCanvasRef.current;\n        const ltrSecondaryCtx = ltrSecondaryCanvas.getContext(\"2d\");\n        ltrSecondaryCtx.clearRect(0, 0, canvasWidth, canvasHeight);\n        monthX = 0;\n        ltrSecondaryCtx.font = \"15px Comic Sans\";\n        // altentive solution second part - regular looping\n        for (i = 0; i < monthesLength; ++i) {\n            let currentMonth = monthGraphNames[i];\n            ltrSecondaryCtx.fillText(currentMonth, monthX, 10);\n            monthX += 100\n        }\n    }\n    const [err, handleErr] = React.useState('');\n    const toggleErr = (error) => {\n        if (!error) return;\n        if (typeof error === 'object' && error.message.includes(\"Unexpected token\")) {\n            const httpError = new Error(\"can't retrieve data - API resource isn't exsist or remote json file unsturctured\")\n            console.log(`\\x1b[35mCustom development message: \\n ${httpError}`);\n            setTimeout(() => { // UX\n                handleErr(\"No stock history data\");\n            }, 500);\n        }\n    };\n\n    const [width, setWidth] = React.useState(500);\n    const scaleCanvasWidth = (canvasWidth) => setWidth(canvasWidth);\n\n    const [height, setHeight] = React.useState(300);\n    const scaleCanvasHeight = (canvasHeight) => setHeight(canvasHeight);\n\n\n    // relating to canvas el\n    const mainCanvasRef = React.createRef();\n    const secondaryCanvasRef = React.createRef();\n    const ltrMainCanvasRef = React.createRef();\n    const ltrSecondaryCanvasRef = React.createRef();\n\n    const [graphViewFlag, setLtrView] = React.useState(true);\n    const [alignGraphFlag, setGraphAlignment] = React.useState(false);\n    const toggleGraph = () => {\n        setLtrView(!graphViewFlag);\n    }\n    const toggleAlignment = () => setGraphAlignment(!alignGraphFlag)\n\n    useEffect(() => {\n        getMonthesData();\n    });\n\n    // styling\n    const [graphHeadLine, mainCanvasStyle, secondaryCanvasStyle, altentiveCanvasStyle] = [\n        { fontFamily: 'Comic', color: 'orange' },\n        { backgroundColor: \"lavender\", transform: 'skewX(8deg) rotateX(180deg) rotateY(180deg)' },\n        { display: 'block', margin: 'auto', position: 'relative', left: '35px' },\n        { backgroundColor: \"lavender\", transform: 'rotateX(180deg) rotateY(180deg)' },\n    ];\n    const [quantitySpan, yearSpan, regularGraphSpan] = [\n        { position: 'absolute',display: 'inlineBlock', paddingRight: 3 },\n        { color: 'cadetblue', zIndex: 1, position: 'relative', bottom: '5px', right: '520px', fontWeight: 'bold' },\n        { color: 'cadetblue', zIndex: 1, position: 'relative', top: '18px', fontWeight: 'bold' },\n\n    ];\n    const switchDirectionButton = {\n        position: 'absolute',\n        right: '15px',\n        top: '17%',\n        margin: '10px'\n    }\n    // graph date\n    const date = new Date();\n    const year = date.getFullYear();\n\n    return (\n        <div>\n            <h5 className=\"text-info\">Graph View</h5>\n            {err ? <div>\n                <h2 style={{ color: 'red' }} >\n                    <small className=\"text-info\">\n                        Current warehouse stock available on \"Display Details\" button\n                    </small>\n                    &#128073;\n                <br />\n                    {err}\n                </h2>\n            </div>\n                :\n                <div>\n                    <h3 style={graphHeadLine}>Stock History Sketch</h3>\n                    {\n                        graphViewFlag ?\n                            <>\n                                <canvas\n                                    width={width}\n                                    height={height}\n                                    ref={mainCanvasRef}\n                                    style={alignGraphFlag ? altentiveCanvasStyle : mainCanvasStyle}>\n                                </canvas>\n                                <span style={quantitySpan}>Stock quantity <br /><b className=\"text-danger\">{units}</b> per unit</span>\n                                <span style={yearSpan}>{year}</span>\n                                <canvas\n                                    width={width}\n                                    height={100}\n                                    ref={secondaryCanvasRef}\n                                    style={secondaryCanvasStyle}\n                                >\n                                </canvas>\n                            </>\n                            :\n                            <>\n                                <canvas\n                                    width={width}\n                                    height={height}\n                                    ref={ltrMainCanvasRef}\n                                    style={alignGraphFlag ? { backgroundColor: \"currentColor\" } : {backgroundColor: \"currentColor\", transform: \"skewX(8deg\"}}\n                                >\n                                </canvas>\n                                <span style={quantitySpan}>Stock quantity | (<b className=\"text-danger\">1000</b> per unit)</span>\n                                <span style={regularGraphSpan}>{year}</span>\n                                <canvas\n                                    width={width}\n                                    height={100}\n                                    ref={ltrSecondaryCanvasRef}\n                                    style={secondaryCanvasStyle}\n                                >\n                                </canvas>\n                            </>\n\n                    }\n                </div>\n            }\n            \n                <Button color=\"primary\" \n                onClick={toggleGraph} \n                style={switchDirectionButton} \n                disabled={!!err}\n                >\n                    {graphViewFlag ? 'Show Regular Graph Direction' : 'Show Right To Left Graph'}\n                </Button>\n                {!err && \n                <Button \n                outline \n                color=\"primary\" \n                onClick={toggleAlignment} \n                // style={switchDirectionButton} \n                >\n                    {!alignGraphFlag ? 'Align Graph' : 'Initial View'}\n                </Button>\n                }\n        </div>\n    )\n}\n","import React from 'react'\nimport { UncontrolledTooltip } from 'reactstrap';\n\n\nexport default function Logo() {\n  return (\n    <svg width=\"61\" height=\"57\" id=\"brand-svg\">\n      <rect x=\"5\" y=\"5\" rx=\"20\" ry=\"20\" width=\"55\" height=\"50\"\n      className=\"regular-brand\"  style={{stroke: 'black',strokeWidth:5,opacity:0.5}} />\n          <text x=\"10\" y=\"35\" fontFamily=\"Verdana\" fontSize=\"15\" fill=\"yellow\">Brand</text>\n      Sorry, your browser does not support inline SVG.\n      <UncontrolledTooltip placement=\"bottom\" target=\"brand-svg\">\n        Company Home Page\n      </UncontrolledTooltip>\n      <style>{\"\\\n        .regular-brand {\\\n          fill: red;\\\n          }\\\n        .regular-brand:hover {\\\n          fill: oldlace;\\\n        }\\\n        \"}\n      </style>\n    </svg>\n    \n  )\n}\n\n\n","import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n  UncontrolledTooltip\n} from \"reactstrap\";\n\nimport Logo from \"./Logo\";\nimport styled from \"styled-components\";\n// import { useHistory } from \"react-router-dom\";\n\nconst MainBlueNav = styled.div`\n  background-color: blue;\n`;\n\nconst Boldlink = styled.span`\n  font-weight: bold;\n`;\n\nconst Upper = styled.span`\n  text-transform: uppercase;\n`;\n\nexport const CompanyDashboard = ({\n  warehouses,\n  passActiveWarehouse,\n  currentRoute,\n  passVirtulRoute\n}) => {\n  // let history = useHistory();\n  const [isOpen, setIsOpen] = useState(false);\n  const exsistWarehouses = [];\n  warehouses.forEach((property, i) => (exsistWarehouses[i] = property.name));\n\n  const warehousesUseCases = [];\n  warehouses.forEach(\n    (property, i) => (warehousesUseCases[i] = property.useCase)\n  );\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  function activateWarehouse(warehouse) {\n    const wlength = warehouses.length;\n    for (let i = 0; i < wlength; ++i) {\n      warehouses[i].active = false;\n    }\n    if (warehouse === \"init\") {\n      passActiveWarehouse([...warehouses]);\n      return;\n    }\n    const activeWH = warehouses.find(wHouse => wHouse.name === warehouse);\n    const activeWarehouseIndex = warehouses.findIndex(\n      wHouse => wHouse.name === warehouse\n    );\n    activeWH.active = true;\n    warehouses.splice(activeWarehouseIndex, activeWH);\n    passActiveWarehouse([...warehouses]);\n  }\n\n  // const whButtonSwitch = history.location.pathname;\n  // const whButtonFlag = whButtonSwitch === '/' ? true : false;\n  // function showWarehouseOptions() {\n  //   history.push('/');\n  // }\n\n  return (\n    <MainBlueNav>\n      <Navbar light expand=\"md\">\n        <NavbarBrand href=\"/supply-chain\">\n          <Logo />\n        </NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto text-white\" navbar>\n            <NavItem>\n              <NavLink\n                id=\"git\"\n                href=\"https://github.com/avivsab/supply-chain\"\n                className=\"text-white\"\n              >\n                Repository\n              </NavLink>\n              <UncontrolledTooltip placement=\"bottom\" target=\"git\">\n                view source code\n              </UncontrolledTooltip>\n            </NavItem>\n            <NavItem\n              id=\"alerts\"\n              style={{ margin: \"0 35px\" }}\n              onClick={() => passVirtulRoute(\"alerts\")}\n            >\n              <NavLink className=\"text-white\">Alerts </NavLink>\n              <UncontrolledTooltip placement=\"bottom\" target=\"alerts\">\n                Mimic routes functionality <hr />\n                Real route system can be Accessed on development mode\n              </UncontrolledTooltip>\n            </NavItem>\n            {currentRoute === \"base\" ? (\n              <UncontrolledDropdown nav inNavbar>\n                <DropdownToggle nav>\n                  <Boldlink className=\"text-white\" id=\"main-functionality\">\n                    {<span>Warehouses Managment</span>}\n                  </Boldlink>\n                  <UncontrolledTooltip\n                    placement=\"right\"\n                    target=\"main-functionality\"\n                    style={{ width: \"280px\", padding: 3 }}\n                  >\n                    Main Functioning Warehouses\n                  </UncontrolledTooltip>\n                </DropdownToggle>\n                <DropdownMenu right>\n                  {exsistWarehouses.map((warehouse, i) => {\n                    return (\n                      <DropdownItem\n                        key={`warehouse${i}`}\n                        onClick={() => activateWarehouse(warehouse)}\n                        id={\"wh\" + i}\n                      >\n                        <Upper>\n                          warehouse {warehouse}\n                          <UncontrolledTooltip\n                            placement=\"right\"\n                            target={\"wh\" + i}\n                          >\n                            {warehousesUseCases[i]}\n                          </UncontrolledTooltip>\n                        </Upper>\n                      </DropdownItem>\n                    );\n                  })}\n                  <DropdownItem divider />\n                  <DropdownItem onClick={() => activateWarehouse(\"init\")}>\n                    Main Page\n                  </DropdownItem>\n                </DropdownMenu>\n              </UncontrolledDropdown>\n            ) : (\n              <span onClick={() => passVirtulRoute(\"base\")} className=\"m-auto\">\n                back to warehouses with Saved credentials\n              </span>\n            )}\n          </Nav>\n          <NavbarText className=\"text-white\">Supply-Chain</NavbarText>\n        </Collapse>\n      </Navbar>\n    </MainBlueNav>\n  );\n};\n\nexport default CompanyDashboard;\n","import React, { useState } from 'react'\nimport { Button } from 'reactstrap';\nimport './main.css'\nimport WhouseDetails from './WhouseDetails'\nimport CanvasGraphicDetails from './CanvasGraphicDetails'\nimport CompanyDashboard from './CompanyDashbord'\nexport const Main = (props) => {\n    // const passRouter = props.path;\n    const initialWarhouses = props.initialWarehouses;\n    const passVirtulRoute = props.passVirtulRoute;\n    const currentRoute = props.currentRoute\n    const [warehouses, setActive] = useState(initialWarhouses);\n    const [showGraph, toggleGraph] = useState(false);\n    const toggleView = () => toggleGraph(!showGraph);\n    return (\n        <div>\n            <CompanyDashboard warehouses={warehouses} passActiveWarehouse={setActive} passVirtulRoute={passVirtulRoute} currentRoute={currentRoute} />\n            <h1 className=\"brand-name text-primary\">Company Stocks Managment</h1>\n            {warehouses.map(wh => {\n                return (\n                    wh.active &&\n                    <div key={wh.name}>\n                        <h2 style={{textTransform: 'capitalize'}}>warehouse {wh.name}</h2>\n                        {\n                            !showGraph ?\n                                <>\n                                    <WhouseDetails activeWarehouse={warehouses} />\n                                    <Button color=\"success\" className=\"view-button\" onClick={toggleView}>Graphic View</Button>\n                                </>\n                                :\n                                <>\n                                    <CanvasGraphicDetails activeWarehouse={warehouses} />\n                                    <Button color=\"info\" className=\"view-button\" onClick={toggleView}>Display Details</Button>\n                                </>\n                        }\n                    </div>\n                );\n            })\n            }\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Form, FormGroup, Label, Input, FormFeedback, FormText, Row, Button, UncontrolledTooltip } from 'reactstrap';\n\nexport const Login = (props) => {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = (e) => {\n    const inputName = e.target.name;\n    const { value } = e.target;\n    if (inputName === 'username') setUserName(value);\n    if (inputName === 'password') setPassword(value);\n  }\n\n  const validateForm = () => {\n    return userName.length > 5 && password.length > 2;\n    \n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!validateForm()) return false;\n    sessionStorage.setItem('validOnSession', 'true');   \n    return (\n      props.passValidityCheck(true), \n      props.passCurrentUser(userName)\n      );\n  }\n\n  return (\n    <Row xs=\"2\" className=\"mt-5 h5\">\n      <Form className=\"container-md\" onSubmit={handleSubmit}>\n        <FormGroup className=\"position-relative\">\n          <Label>Your Username</Label>\n          <Input\n            onChange={handleChange}\n            name=\"username\"\n            id=\"username\"\n            invalid={userName.length <= 5 && userName.length > 0}\n            valid={userName.length > 5}\n            value={userName}\n          />\n          <UncontrolledTooltip placement=\"right\" target=\"username\">\n            Any Charactars...\n          </UncontrolledTooltip>\n          <FormFeedback valid tooltip>Valid!</FormFeedback>\n          <FormText>Longer then 5 characters</FormText>\n        </FormGroup>\n        <FormGroup className=\"position-relative mb-5\">\n          <Label>Your Password</Label>\n          <Input\n            onChange={handleChange}\n            name=\"password\"\n            id=\"password\"\n            invalid={password.length > 0 && password.length <= 2}\n            valid={password.length > 2}\n            value={password}\n          />\n          <UncontrolledTooltip placement=\"right\" target=\"password\">\n            Just Type (3 or more)\n          </UncontrolledTooltip>\n          <FormFeedback tooltip>Not Valid Yet</FormFeedback>\n          <FormFeedback valid tooltip>Valid!</FormFeedback>\n          <FormText>At least 3 characters</FormText>\n        </FormGroup>\n        <Button \n        outline \n        color=\"primary\" \n        className=\"w-25\"\n        disabled={!validateForm()}\n        >\n          Show Logs\n        </Button>\n      </Form>\n    </Row>\n  );\n}\n\nexport default Login;","import React, { useState, useEffect } from 'react';\n// import { useHistory } from \"react-router-dom\";\nimport { Alert, UncontrolledCollapse, Button, Progress, ToastHeader } from 'reactstrap';\n\nexport const AlertsList = (props) => {\n  // let history = useHistory()\n  const warehouses = props.initialWarehouses;\n\n  const [details, toggleDetails] = useState(false);\n  const [counter, setcounter] = useState(2);\n\n  function removeAutomaticCredential() {\n    sessionStorage.removeItem('validOnSession');\n    sessionStorage.removeItem('loaded');\n    //history.push('/');\n    props.passVirtulRoute('base');\n  }\n  useEffect(() => {\n    const collapseInt = setInterval(() => {\n      if (counter >= 0) {\n        setcounter(counter - 1);\n      } else return;\n      if (counter <= 0) {\n        toggleDetails(true);\n        sessionStorage.setItem('loaded', 'whatever');\n      }\n\n    }, 1000);\n    return () => {\n      clearInterval(collapseInt)\n    }\n  }, [counter])\n\n  const dynamicText = {\n    textTransform: 'uppercase',\n    fontWeight: 'bold',\n    color: 'teal'\n  }\n  return (\n    <div>\n      <ToastHeader\n        icon=\"secodary\"\n        style={dynamicText}\n      >\n        welcome {props.currentUser}\n      </ToastHeader>\n      <Alert color=\"info\" className=\"font-weight-bold\">\n        Currntly\n        <span className=\"p-1\" style={dynamicText}>\n          {warehouses.length}\n        </span>\n        active warehouses\n        <Button\n          color=\"warning\"\n          id=\"toggler\"\n          className=\"ml-5 badge-pill badge-warning\"\n          onClick={() => toggleDetails(!details)}\n          disabled={counter >= 0}\n        >\n          {details ? \"Hide\" : \"Show\"} Logs\n        </Button>\n      </Alert>\n      {counter >= 0 &&\n        <>\n          <Progress striped color=\"info\" value={100 / (counter + 1)} />\n        </>\n      }\n      <UncontrolledCollapse toggler=\"#toggler\" isOpen={details}>\n        <Alert color=\"success\">\n          Warhouse <span style={dynamicText}>north</span> has stable quantity for 12 monthes.\n      </Alert>\n        <Alert color=\"danger\">\n          Warhouse <span style={dynamicText}>west</span> had zero quantity on january\n      </Alert>\n        <Alert color=\"warning\">\n          Warhouse <span style={dynamicText}>east</span> don't has data history\n      </Alert>\n        <Alert color=\"warning\">\n          Warhouse <span style={dynamicText}>south</span> don't has data history\n      </Alert>\n        <div className=\"mt-5\">\n          <Alert\n            color=\"dark\"\n            className=\"w-50 m-auto font-weight-bold shadow badge bg-info border-secondary\"\n            onClick={removeAutomaticCredential}\n            style={{ cursor: 'pointer' }}\n          >\n            Dissmis automatic credentials <br /> <hr /> and back to Home page\n      </Alert>\n          <Alert color=\"light\">\n            Later on you should dismiss the credentials or close the browser  <br />\n            To keep credentials navigate from the navbar menu\n      </Alert>\n        </div>\n      </UncontrolledCollapse>\n    </div>\n  );\n};\n\nexport default AlertsList;","import React, { useState, useEffect } from 'react'\nimport { Alert } from \"reactstrap\"\n\nimport { CompanyDashboard } from './CompanyDashbord'\nimport { Login } from './Login'\nimport { AlertsList } from './AlertsList'\n\nexport const Alerts = (props) => {\n    const intialWarehouses = props.initialWarehouses;\n    const passVirtulRoute = props.passVirtulRoute;\n\n    const [validForm, setValidForm] = useState(false);\n    const [currentUser, setcurrentUser] = useState('')\n\n    function checkSessionAllreadyValidtate() {\n        if (sessionStorage.getItem('validOnSession') === 'true') {\n            setValidForm(true);\n        }\n    }\n\n    useEffect(() => {\n        checkSessionAllreadyValidtate();\n    }, [])\n\n    return (\n        <div>\n            <CompanyDashboard warehouses={intialWarehouses} passVirtulRoute={passVirtulRoute} />\n            <h1 className=\"brand-name text-primary\">Company Stocks Managment</h1>\n            <div className=\"container\">\n                {!validForm &&\n                <>\n                    <Alert color='primary' className=\"font-weight-bold\">Currently OK\n                    <br />\n                        To see logs fill out the fields\n                    </Alert>\n                    <Login passValidityCheck={setValidForm} passCurrentUser={setcurrentUser} />\n                </>\n                }\n                {validForm &&\n                    <AlertsList {...props} currentUser={currentUser} />\n                }\n            </div>\n        </div>\n    )\n}\n","import React, {useState} from 'react';\nimport './App.css';\n// import {\n//   BrowserRouter as Router,\n//   Route\n// } from \"react-router-dom\";\nimport { Main } from './components/Main'\nimport { Alerts } from './components/Alerts'\n\nconst initialWarehouses = [\n  { name: 'north', active: false, useCase: 'normal data' },\n  { name: 'west', active: false, useCase: 'big numbers data' },\n  { name: 'east', active: false, useCase: 'violate contract properties' },\n  { name: 'south', active: false, useCase: 'duplicate data' }\n]\nfunction App() {\n  const [mimicRoute, setMimicRoute] = useState('base');\n  return (\n    <div className=\"App\">\n     { mimicRoute==='base' && <Main initialWarehouses={initialWarehouses} passVirtulRoute={setMimicRoute} currentRoute={mimicRoute} /> }\n     { mimicRoute==='alerts' && <Alerts initialWarehouses={initialWarehouses} passVirtulRoute={setMimicRoute} currentRoute={mimicRoute}/> }     \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render( \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}